<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.korit.BoardStudy.mapper.BoardMapper">
    <resultMap id="BoardResultMap" type="com.korit.BoardStudy.entity.Board">
        <id property="boardId" column="board_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="userId" column="user_id"/>
        <result property="createDt" column="create_dt"/>
        <result property="updateDt" column="update_dt"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.korit.BoardStudy.entity.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="createDt" column="create_dt"/>
        <result property="updateDt" column="update_dt"/>
    </resultMap>
    <resultMap id="GetBoardRespDtoResultMap" type="com.korit.BoardStudy.dto.board.GetBoardRespDto">
        <id property="boardId" column="board_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createDt" column="bt_create_dt"/>
        <association property="user" resultMap="UserResultMap"/>
    </resultMap>
    <insert id="addBoard">
        INSERT INTO
            board_tb
        VALUES
            (0, #{title}, #{content}, #{userId}, NOW(), NULL)
    </insert>
    <delete id="deleteBoard">
        DELETE FROM
            board_tb
        WHERE
            board_id = #{boardId}
    </delete>
    <select id="getBoardByBoardId" resultMap="GetBoardRespDtoResultMap">
        SELECT
            bt.board_id,
            bt.title,
            bt.content,
            bt.create_dt as bt_create_dt,

            bt.user_id,
            ut.username,
            ut.password,
            ut.email,
            ut.create_dt,
            ut.update_dt
        FROM
            board_tb bt
            LEFT JOIN user_tb ut ON (bt.user_id = ut.user_id)
        WHERE
            bt.board_id = #{boardId}
    </select>
    <select id="getBoardList" resultMap="GetBoardRespDtoResultMap">
        SELECT
            bt.board_id,
            bt.title,
            bt.content,
            bt.create_dt as bt_create_dt,

            bt.user_id,
            ut.username,
            ut.password,
            ut.email,
            ut.create_dt,
            ut.update_dt
        FROM
            board_tb bt
            LEFT JOIN user_tb ut ON (bt.user_id = ut.user_id)
        ORDER BY
            bt.create_dt DESC
        LIMIT #{size} OFFSET #{offset};
    </select>
    <select id="getBoardListByUserId">
        SELECT
            *
        FROM
            board_tb
        WHERE
            user_id = #{userId}
    </select>
    <select id="getBoardCount" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            board_tb
    </select>
    <update id="updateBoard">
        UPDATE
            board_tb
        SET
            title = #{title},
            content = #{content},
            update_dt = NOW()
        WHERE
            board_id = #{boardId}
    </update>
</mapper>